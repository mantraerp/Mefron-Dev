[
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2024-05-29 17:07:27.707499",
  "module": "Mefron Dev",
  "name": "Indentify Vch subtype for Gl entry.",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "GL Entry",
  "script": "if doc.voucher_type == \"Sales Invoice\":\n    isreturn = frappe.db.get_value(\"Sales Invoice\",doc.voucher_no,'is_return')\n    isdebitnote = frappe.db.get_value(\"Sales Invoice\",doc.voucher_no,'is_debit_note')\n    if isreturn == 0 and isdebitnote == 0:\n        doc.voucher_subtype = frappe.db.get_value(\"Sales Invoice\",doc.voucher_no,'custom_invoice_type')\n\nif doc.voucher_type == \"Purchase Invoice\":\n    isreturn = frappe.db.get_value(\"Purchase Invoice\",doc.voucher_no,'is_return')\n    if isreturn == 0:\n        doc.voucher_subtype = frappe.db.get_value(\"Purchase Invoice\",doc.voucher_no,'custom_invoice_type')",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Save",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2024-05-29 17:07:27.622885",
  "module": "Mefron Dev",
  "name": "Set Income Account To SI After Save",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": "Sales Invoice",
  "script": "if doc.tax_category:\n    for item in doc.items:\n            company = frappe.db.get_value('Account Default', {'parent': doc.tax_category},'company')\n            if company:\n                inc_default = frappe.db.get_value('Item Default', {'parent': item.item_code,'company': doc.company}, 'income_account')\n                export_sales_account = frappe.db.get_value('Account Default', {'parent': doc.tax_category,'income_account':inc_default,'company': doc.company}, 'export_sales_account')\n                if export_sales_account is not None and inc_default == item.income_account:\n                    item.income_account = export_sales_account\n                else:\n                    item.income_account = inc_default\n            else:\n                inc_default = frappe.db.get_value('Item Default', {'parent': item.item_code,'company': doc.company}, 'income_account')\n                if inc_default:\n                    item.income_account = inc_default\n                else: \n                    default_income_account = frappe.db.get_value('Company', {'name': doc.company}, 'default_income_account')\n                    item.income_account = default_income_account\nelse:\n    pass",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": "warehouse_manager_data_fetch_material_request",
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2024-05-29 17:07:27.397283",
  "module": "Mefron Dev",
  "name": "Warehouse Manager Data Fetch in Material Request",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": null,
  "script": "warehouse=frappe.form_dict[\"warehouse\"]\n\nwarehouse_manager = []\n\nwm = frappe.db.sql(\"select warehouse_manager from `tabWarehouse Manager` where parent = %s \",(warehouse))\n            \n# for record in wm:\n#         warehouse_manager.append(record)\n\nfrappe.response[\"message\"] = wm",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "warehouse_manager_data_fetch_stock_entry",
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2024-05-29 17:07:27.108307",
  "module": "Mefron Dev",
  "name": "Warehouse Manager Data Fetch in Stock Entry",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": null,
  "script": "mr_no = frappe.form_dict[\"mr_no\"]\ntw = frappe.db.sql(\"SELECT set_warehouse FROM `tabMaterial Request` WHERE name = %s\", (mr_no,))\n\nset_tw = tw[0][0]  # Extracting the value from the first tuple in the list\n# frappe.msgprint(set_tw)\n\nwarehouse_manager = []\n\nwm = frappe.db.sql(\"select warehouse_manager from `tabWarehouse Manager` where parent = %s \", (set_tw,))\n\n# for record in wm:\n#     warehouse_manager.append(record[\"warehouse_manager\"])\n\n# Assign the string to frappe.response[\"message\"]\nfrappe.response[\"message\"] = wm\n\n# frappe.msgprint(warehouse_manager_str)",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": "get_party_name",
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "enable_rate_limit": 0,
  "event_frequency": "All",
  "modified": "2024-05-29 17:07:26.877421",
  "module": "Mefron Dev",
  "name": "Payment Request fetching party_name",
  "rate_limit_count": 5,
  "rate_limit_seconds": 86400,
  "reference_doctype": null,
  "script": "party_type = frappe.form_dict[\"party_type\"]\nparty = frappe.form_dict[\"party\"]\n\nif party_type == \"Supplier\":\n    sup_name = frappe.db.sql(\"select supplier_name from `tabSupplier` where name = %s \", (party), as_dict = True)\n    if sup_name :\n        supplier_name = sup_name[0][\"supplier_name\"]\n        frappe.response[\"message\"] = supplier_name\nelif party_type == \"Customer\":\n    cust_name = frappe.db.sql(\"select customer_name from `tabCustomer` where name = %s \", (party), as_dict = True)\n    if cust_name :\n        customer_name = cust_name[0][\"customer_name\"]\n        frappe.response[\"message\"] = customer_name\nelif party_type == \"Employee\":\n    emp_name = frappe.db.sql(\"select employee_name from `tabEmployee` where name = %s \", (party), as_dict = True)\n    if emp_name :\n        employee_name = emp_name[0][\"employee_name\"]\n        frappe.response[\"message\"] = employee_name\nelse:\n    frapee.msgprint(\"Not Found\")",
  "script_type": "API"
 }
]